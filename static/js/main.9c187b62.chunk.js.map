{"version":3,"sources":["utils.js","game/levels.js","game/vector.js","game/core.js","components/level.js","components/lives.js","components/block.js","components/paddle.js","components/ball.js","components/scene.js","App.js","components/page.js","serviceWorker.js","index.js"],"names":["getRange","length","Array","keys","getRandomFrom","args","Math","floor","random","registerListener","eventName","handler","window","addEventListener","removeEventListener","getRandomBlock","getBlocks","rows","columns","map","LEVELS","lives","paddleWidth","speed","blocks","Vector","x","y","this","number","hypot","scaleBy","other","amt","dotProduct","normal","subtract","projectOn","degrees","radians","PI","toRadians","cos","sin","atan2","crossProduct","BLOCK_HEIGHT","PADDLE_HEIGHT","MOVEMENT","LEFT","RIGHT","UP","DOWN","LEFT_UP","add","normalize","RIGHT_UP","getInitialPaddleAndBall","width","height","paddleY","paddle","position","ball","center","BALL_RADIUS","radius","direction","getGameStateFromLevel","arrays","blocksStart","rowsOfBlocks","row","i","density","j","size","reduce","acc","isInBoundaries","oneSide","otherSide","oneBoundary","otherBoundary","getNewGameState","state","movement","timespan","distance","withNewX","getNewPaddle","oldDirection","newBallCenter","ballBottom","withNewBallProps","props","withNewBallDirection","vector","minAngle","angle","angleBetween","maxAngle","rotate","getAdjustedVector","distortionLevel","getComponent","distortion","getDistortedDirection","reflect","ballLeft","ballRight","ballTop","paddleLeft","paddleRight","paddleTop","abs","array","element","block","find","newBlock","filter","e","oldElement","newElement","updateElement","blockTop","blockBottom","blockLeft","getNewBallNormal","level","unit","fontSize","className","containerWidth","rx","colors","fill","cx","cy","r","MOVEMENT_KEYS","getProjectors","containerSize","gameSize","widthRatio","heightRatio","unitOnScreen","min","projectDistance","projectVector","getInitialState","inState","localStorage","getItem","parseInt","getInitialLevel","game","time","Date","now","stopTime","undefined","ACTION","HANDLER","key","includes","newState","newGame","setItem","reducer","type","payload","useReducer","dispatch","act","useEffect","timerId","setInterval","unregisterKeydown","which","unregisterKeyup","clearInterval","viewWidth","Page","sceneContainer","useRef","useState","setSize","onResize","current","getBoundingClientRect","unregisterResizeListener","ref","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c187b62.chunk.js","sourcesContent":["export const toDegrees = radians => (radians * 180) / Math.PI\nexport const toRadians = degrees => (degrees * Math.PI) / 180\n\nexport const getRange = length => [...Array(length).keys()]\nexport const getRandomFrom = (...args) => args[Math.floor(Math.random() * args.length)]\nexport const flatten = arrays => arrays.reduce((acc, row) => [...acc, ...row], [])\nexport const withoutElement = (array, element) => array.filter(e => e !== element)\nexport const updateElement = (array, oldElement, newElement) => array.map(e => e === oldElement ? newElement : e)\n\nexport const registerListener = (eventName, handler) => {\n  window.addEventListener(eventName, handler)\n  return () => window.removeEventListener(eventName, handler)\n}","import { getRange } from '../utils'\n\nexport const BLOCK_MAX_DENSITY = 3\n\nconst getRandomBlock = () => Math.floor(Math.random() * BLOCK_MAX_DENSITY)\n\nconst getBlocks = (rows, columns) =>\n  getRange(rows).map(() => getRange(columns).map(getRandomBlock))\n\nexport const LEVELS = [\n  {\n    lives: 5,\n    paddleWidth: 3.5,\n    speed: 1,\n    blocks: getBlocks(3, 6)\n  },\n  {\n    lives: 4,\n    paddleWidth: 3,\n    speed: 1.4,\n    blocks: getBlocks(4, 7)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2.5,\n    speed: 1.8,\n    blocks: getBlocks(5, 8)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2,\n    speed: 2.2,\n    blocks: getBlocks(6, 9)\n  },\n]\n","import { toDegrees, toRadians } from '../utils'\n\nexport default class Vector {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  scaleBy(number) {\n    return new Vector(this.x * number, this.y * number);\n  }\n\n  length() {\n    return Math.hypot(this.x, this.y)\n  }\n\n  add({ x, y }) {\n    return new Vector(this.x + x, this.y + y)\n  }\n\n  normalize() {\n    return this.scaleBy(1 / this.length())\n  }\n\n  subtract({ x, y }) {\n    return new Vector(this.x - x, this.y - y)\n  }\n\n  dotProduct({ x, y }) {\n    return this.x * x + this.y * y\n  }\n\n  projectOn(other) {\n    const amt = this.dotProduct(other) / other.length()\n    return new Vector(amt * other.x, amt * other.y)\n  }\n\n  reflect(normal) {\n    return this.subtract(this.projectOn(normal).scaleBy(2))\n  }\n\n  rotate(degrees) {\n    const radians = toRadians(degrees)\n    const cos = Math.cos(radians)\n    const sin = Math.sin(radians)\n\n    return new Vector(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos\n    )\n  }\n\n  crossProduct({ x, y }) {\n    return this.x * y - x * this.y\n  }\n\n  angleBetween(other) {\n    return toDegrees(\n      Math.atan2(this.crossProduct(other), this.dotProduct(other))\n    )\n  }\n}","import Vector from './vector'\nimport { flatten, getRandomFrom, withoutElement, updateElement } from '../utils'\n\nconst PADDLE_AREA = 1 / 3\nconst BLOCK_HEIGHT = 1 / 3\nconst PADDLE_HEIGHT = BLOCK_HEIGHT\nconst BALL_RADIUS = 1 / 5\nconst DISTANCE_IN_MS = 0.005\n\nexport const MOVEMENT = {\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT'\n}\n\nconst LEFT = new Vector(-1, 0)\nconst RIGHT = new Vector(1, 0)\nconst UP = new Vector(0, -1)\nconst DOWN = new Vector(0, 1)\n\nconst LEFT_UP = LEFT.add(UP).normalize()\nconst RIGHT_UP = RIGHT.add(UP).normalize()\n\nexport const getInitialPaddleAndBall = (width, height, paddleWidth) => {\n  const paddleY = height - PADDLE_HEIGHT\n  const paddle = {\n    position: new Vector((width - paddleWidth) / 2, paddleY),\n    width: paddleWidth,\n    height: PADDLE_HEIGHT\n  }\n  const ball = {\n    center: new Vector(height / 2, paddleY - BALL_RADIUS * 2),\n    radius: BALL_RADIUS,\n    direction: getRandomFrom(LEFT_UP, RIGHT_UP)\n  }\n\n  return {\n    paddle,\n    ball\n  }\n}\n\nexport const getGameStateFromLevel = ({ lives, paddleWidth, speed, blocks }) => {\n  const width = blocks[0].length\n  const height = width\n\n  const blocksStart = ((height - height * PADDLE_AREA) - blocks.length * BLOCK_HEIGHT) / 2\n\n  const rowsOfBlocks = blocks.map((row, i) =>\n    row.map((density, j) => ({\n      density,\n      position: new Vector(j, blocksStart + (i * BLOCK_HEIGHT)),\n      width: 1,\n      height: BLOCK_HEIGHT\n    })\n  ))\n\n  const size = {\n    width,\n    height\n  }\n  return {\n    size,\n    blocks: flatten(rowsOfBlocks),\n    ...getInitialPaddleAndBall(width, height, paddleWidth),\n    lives,\n    speed\n  }\n}\n\nconst getDistortedDirection = (vector, distortionLevel = 0.3) => {\n  const getComponent = () => Math.random() * distortionLevel - distortionLevel / 2\n  const distortion = new Vector(getComponent(), getComponent())\n  return vector.add(distortion).normalize()\n}\n\nconst getNewPaddle = (paddle, size, distance, movement) => {\n  if (!movement) return paddle\n  const direction = movement === MOVEMENT.LEFT ? LEFT : RIGHT\n\n  const { x } = paddle.position.add(direction.scaleBy(distance))\n  const withNewX = x => ({\n    ...paddle,\n    position: new Vector(x, paddle.position.y)\n  })\n  if (x < 0) {\n    return withNewX(0)\n  }\n  if (x + paddle.width > size.width) {\n    return withNewX(size.width - paddle.width)\n  }\n  return withNewX(x)\n}\n\nconst isInBoundaries = (oneSide, otherSide, oneBoundary, otherBoundary) => (\n  (oneSide >= oneBoundary && oneSide <= otherBoundary) ||\n  (otherSide >= oneBoundary && otherSide <= otherBoundary)\n)\n\nconst getAdjustedVector = (normal, vector, minAngle = 15) => {\n  const angle = normal.angleBetween(vector)\n  const maxAngle = 90 - minAngle\n  if (angle < 0) {\n    if (angle > -minAngle) {\n      return normal.rotate(-minAngle)\n    }\n    if (angle < -maxAngle) {\n      return normal.rotate(-maxAngle)\n    }\n  } else {\n    if (angle < minAngle) {\n      return normal.rotate(minAngle)\n    }\n    if (angle > maxAngle) {\n      return normal.rotate(maxAngle)\n    }\n  }\n  return vector\n}\n\nexport const getNewGameState = (state, movement, timespan) => {\n  const { size, speed, lives } = state\n  const distance = timespan * DISTANCE_IN_MS * speed\n  const paddle = getNewPaddle(state.paddle, size, distance, movement)\n\n  const { radius } = state.ball\n  const oldDirection = state.ball.direction\n  const newBallCenter = state.ball.center.add(oldDirection.scaleBy(distance))\n  const ballBottom = newBallCenter.y + radius\n  if (ballBottom > size.height) {\n    return {\n      ...state,\n      ...getInitialPaddleAndBall(size.width, size.height, paddle.width),\n      lives: lives - 1\n    }\n  }\n  \n  const withNewBallProps = props => ({\n    ...state,\n    paddle,\n    ball: {\n      ...state.ball,\n      ...props\n    }\n  })\n\n  const withNewBallDirection = normal => {\n    const distorted = getDistortedDirection(oldDirection.reflect(normal))\n    const direction = getAdjustedVector(normal, distorted)\n    return withNewBallProps({ direction })\n  }\n  const ballLeft = newBallCenter.x - radius\n  const ballRight = newBallCenter.x + radius\n  const ballTop = newBallCenter.y - radius\n  const paddleLeft = paddle.position.x\n  const paddleRight = paddleLeft+ paddle.width\n  const paddleTop = paddle.position.y\n\n  const ballGoingDown = Math.abs(UP.angleBetween(oldDirection)) > 90\n  const hitPaddle = ballGoingDown && ballBottom >= paddleTop && ballRight >= paddleLeft && ballLeft <= paddleRight\n  if (hitPaddle) return withNewBallDirection(UP)\n  if (ballTop <= 0) return withNewBallDirection(DOWN)\n  if (ballLeft <= 0) return withNewBallDirection(RIGHT)\n  if (ballRight >= size.width) return withNewBallDirection(LEFT)\n\n  const block = state.blocks.find(({ position, width, height }) => (\n    isInBoundaries(ballTop, ballBottom, position.y, position.y + height) &&\n    isInBoundaries(ballLeft, ballRight, position.x, position.x + width) \n  ))\n  if (block) {\n    const density = block.density - 1\n    const newBlock = { ...block, density }\n    const blocks = density < 0 ? withoutElement(state.blocks, block) : updateElement(state.blocks, block, newBlock)\n    \n    const getNewBallNormal = () => {\n      const blockTop = block.position.y\n      const blockBottom = blockTop + block.height\n      const blockLeft = block.position.x\n      if (ballTop > blockTop - radius && ballBottom < blockBottom + radius) {\n        if (ballLeft < blockLeft) return LEFT\n        if (ballRight > blockLeft + block.width) return RIGHT\n      }\n      if (ballTop > blockTop) return DOWN\n      if (ballTop <= blockTop) return UP\n    }\n    return {\n      ...withNewBallDirection(getNewBallNormal()),\n      blocks\n    }\n  }\n  return withNewBallProps({ center: newBallCenter })\n}\n\n","import React from 'react'\n\nexport default ({ level, unit }) => (\n  <text x={unit} y={unit * 2} fontSize={unit} className='level'>LEVEL: {level}</text>\n)\n","import React from 'react'\n\nimport { getRange } from '../utils'\n\nexport default ({ lives, containerWidth, unit }) => {\n  const width = unit * 2\n  return getRange(lives).map(i => (\n    <rect\n      className='life'\n      rx={unit / 4}\n      height={unit}\n      width={width}\n      y={unit}\n      x={containerWidth - unit - width * (i + 1) - (unit / 2) * i}\n      key={i}\n    />\n  ))\n}","import React from 'react'\nimport { getRange } from '../utils'\nimport { BLOCK_MAX_DENSITY } from '../game/levels'\n\nconst colors = getRange(BLOCK_MAX_DENSITY).map(i => `rgba(26, 188, 156, ${1 / (BLOCK_MAX_DENSITY - i)})`)\n\nexport default ({ x, y, width, height, density }) => (\n  <rect className='block' fill={colors[density]} x={x} y={y} width={width} height={height} />\n)","\nimport React from 'react'\n\nexport default ({ x, y, width, height }) => (\n  <rect className='paddle' x={x} y={y} width={width} height={height} />\n)","import React from 'react'\n\nexport default ({ x, y, radius }) => (\n  <circle className='ball' cx={x} cy={y} r={radius} />\n)","import React, { useEffect, useReducer } from 'react'\n\nimport { LEVELS } from '../game/levels'\nimport { MOVEMENT, getNewGameState, getGameStateFromLevel } from '../game/core'\nimport { registerListener } from '../utils'\n\nimport Level from './level'\nimport Lives from './lives'\nimport Block from './block'\nimport Paddle from './paddle'\nimport Ball from './ball'\n\nconst MOVEMENT_KEYS = {\n  LEFT: [65, 37],\n  RIGHT: [68, 39]\n}\n\nconst STOP_KEY = 32\n\nconst UPDATE_EVERY = 1000 / 60\n\nconst getInitialLevel = () => {\n  const inState = localStorage.getItem('level')\n  return inState ? parseInt(inState, 10) : 0\n}\n\nconst getProjectors = (containerSize, gameSize) => {\n  const widthRatio = containerSize.width / gameSize.width\n  const heightRatio = containerSize.height / gameSize.height\n  const unitOnScreen = Math.min(widthRatio, heightRatio)\n\n  return {\n    projectDistance: distance => distance * unitOnScreen,\n    projectVector: vector => vector.scaleBy(unitOnScreen)\n  }\n}\n\nconst getInitialState = containerSize => {\n  const level = getInitialLevel()\n  const game = getGameStateFromLevel(LEVELS[level])\n  const { projectDistance, projectVector } = getProjectors(containerSize, game.size)\n  return {\n    level,\n    game,\n    containerSize,\n    projectDistance,\n    projectVector,\n    time: Date.now(),\n    stopTime: undefined,\n    movement: undefined\n  }\n}\n\nconst ACTION = {\n  CONTAINER_SIZE_CHANGE: 'CONTAINER_SIZE_CHANGE',\n  KEY_DOWN: 'KEY_DOWN',\n  KEY_UP: 'KEY_UP',\n  TICK: 'TICK'\n}\n\nconst HANDLER = {\n  [ACTION.CONTAINER_SIZE_CHANGE]: (state, containerSize) => ({\n    ...state,\n    containerSize,\n    ...getProjectors(containerSize, state.game.size)\n  }),\n  [ACTION.KEY_DOWN]: (state, key) => {\n    if (MOVEMENT_KEYS.LEFT.includes(key)) {\n      return { ...state, movement: MOVEMENT.LEFT }\n    } else if (MOVEMENT_KEYS.RIGHT.includes(key)) {\n      return { ...state, movement: MOVEMENT.RIGHT }\n    }\n    return state\n  },\n  [ACTION.KEY_UP]: (state, key) => {\n    const newState = { ...state, movement: undefined }\n    if (key === STOP_KEY) {\n      if (state.stopTime) {\n        return { ...newState, stopTime: undefined, time: state.time + Date.now() - state.stopTime}\n      } else {\n        return { ...newState, stopTime: Date.now() }\n      }\n    }\n    return newState\n  },\n  [ACTION.TICK]: state => {\n    if (state.stopTime) return state\n\n    const time = Date.now()\n    const newGame = getNewGameState(state.game, state.movement, time - state.time)\n    const newState = { ...state, time }\n    if (newGame.lives < 1) {\n      return { ...newState, game: getGameStateFromLevel(LEVELS[state.level]) }\n    } else if (newGame.blocks.length < 1) {\n      const level = state.level === LEVELS.length ? state.level : state.level + 1\n      localStorage.setItem('level', level)\n      const game = getGameStateFromLevel(LEVELS[state.level])\n      return {\n        ...newState,\n        level,\n        game,\n        ...getProjectors(state.containerSize, game.size)\n      }\n    }\n    return { ...newState, game: newGame }\n  }\n}\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type]\n  if (!handler) return state\n  return handler(state, payload)\n}\n\nexport default (containerSize) => {\n  const [state, dispatch] = useReducer(reducer, containerSize, getInitialState)\n  const act = (type, payload) => dispatch({ type, payload })\n  const {\n    projectDistance,\n    projectVector,\n    level,\n    game: {\n      blocks,\n      paddle,\n      ball,\n      size: {\n        width,\n        height\n      },\n      lives\n    }\n  } = state\n\n  useEffect(() => act(ACTION.CONTAINER_SIZE_CHANGE, containerSize), [containerSize])\n\n  useEffect(() => {\n    const onKeyDown = ({ which }) => act(ACTION.KEY_DOWN, which)\n    const onKeyUp = ({ which }) => act(ACTION.KEY_UP, which)\n    const tick = () => act(ACTION.TICK)\n\n    const timerId = setInterval(tick, UPDATE_EVERY)\n    const unregisterKeydown = registerListener('keydown', onKeyDown)\n    const unregisterKeyup = registerListener('keyup', onKeyUp)\n    return () => {\n      clearInterval(timerId)\n      unregisterKeydown()\n      unregisterKeyup()\n    }\n  }, [])\n  \n  const viewWidth = projectDistance(width)\n  const unit = projectDistance(ball.radius)\n  return (\n    <svg width={viewWidth} height={projectDistance(height)} className='scene'>\n      <Level unit={unit} level={level + 1} />\n      <Lives\n        lives={lives}\n        containerWidth={viewWidth}\n        unit={unit}\n      />\n      {blocks.map(({ density, position, width, height }) => (\n        <Block\n          density={density}\n          key={`${position.x}-${position.y}`}\n          width={projectDistance(width)}\n          height={projectDistance(height)}\n          {...projectVector(position)}\n        />)\n      )}\n      <Paddle width={projectDistance(paddle.width)} height={projectDistance(paddle.height)} {...projectVector(paddle.position)} />\n      <Ball {...projectVector(ball.center)} radius={unit} />\n    </svg>\n  )\n}","import Page from './components/page'\n\nexport default Page\n","import React, { useRef, useEffect, useState } from 'react'\n\nimport Scene from './scene'\nimport { registerListener } from '../utils'\n\nexport default () => {\n  const sceneContainer = useRef()\n  const [size, setSize] = useState()\n\n  useEffect(() => {\n    const onResize = () => {\n      const { width, height } = sceneContainer.current.getBoundingClientRect()\n      setSize({ width, height })\n    }\n    const unregisterResizeListener = registerListener('resize', onResize)\n    onResize()\n    return unregisterResizeListener\n  }, [])\n\n  return (\n    <div className='page'>\n      <div className='scene-container' ref={sceneContainer}>\n        {size && <Scene width={size.width} height={size.height} />}\n      </div>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}